/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundaries;

import daos.GenreDAO;
import daos.Globale;
import entities.Genre;
import java.awt.Component;
import java.awt.Rectangle;
import java.sql.*;
import java.util.List;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rayanakel
 */
public class JIFGenres extends javax.swing.JInternalFrame {

    private Connection icn;
    private DefaultTableModel idtm;

    /**
     * Creates new form JIFGenres
     */
    public JIFGenres() {
        initComponents();

        setTitle("CRUD Genres");
        setVisible(true);

        jTextFieldId.setText("ID");
        jTextFieldCode.setText("");
        jTextFieldNom.setText("");
        jTextFieldGrammatical.setText("");

        try {
            icn = Globale.getCnx();
            System.out.println(icn);
            /*
             Recuperation du Model de la jTable
             */
            idtm = (DefaultTableModel) jTableGenres.getModel();

        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }

        remplirJTable();

    }

    private void remplirJTable() {

        for (int i = idtm.getRowCount() - 1; i >= 0; i--) {
            idtm.removeRow(i);
        }

        try {
            Object[] tLigne;
            GenreDAO dao = new GenreDAO(icn);
            List<Genre> liste = dao.selectAll();
            for (int i = 0; i < liste.size(); i++) {
                Genre genre = liste.get(i);
                tLigne = new Object[4];
                tLigne[0] = genre.getIdGenre();
                tLigne[1] = genre.getCodeGenre();
                tLigne[2] = genre.getLibelleGenre();
                tLigne[3] = genre.getGenreGrammatical();
                idtm.addRow(tLigne);
            }

            jLabelMessage.setText("Chargement rÃ©ussi !!");

        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }

    }

    private void cls() {

        try {
            Component[] tComposants = getContentPane().getComponents();
            for (int i = 0; i < tComposants.length; i++) {
                Object objet = tComposants[i];
                if (objet.getClass().toString().equals("class javax.swing.JTextField")) {
                    JTextField composant = (JTextField) objet;
                    composant.setText("");
                }
            }
        } catch (Exception e) {
            jLabelMessage.setText(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableGenres = new javax.swing.JTable();
        jLabelId = new javax.swing.JLabel();
        jLabelCode = new javax.swing.JLabel();
        jLabelNom = new javax.swing.JLabel();
        jLabelGrammatical = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldNom = new javax.swing.JTextField();
        jTextFieldGrammatical = new javax.swing.JTextField();
        jButtonAjouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTableGenres.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableGenres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Code", "Nom", "Grammatical"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableGenres.setGridColor(new java.awt.Color(0, 0, 0));
        jTableGenres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableGenresMouseClicked(evt);
            }
        });
        jTableGenres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableGenresKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableGenres);

        jLabelId.setText("ID");

        jLabelCode.setText("Code");

        jLabelNom.setText("Nom");

        jLabelGrammatical.setText("Grammatical");

        jTextFieldId.setBackground(new java.awt.Color(238, 238, 238));
        jTextFieldId.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldId.setText("ID");
        jTextFieldId.setBorder(null);
        jTextFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdActionPerformed(evt);
            }
        });

        jTextFieldNom.setText("jTextField3");

        jTextFieldGrammatical.setText("jTextField4");

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAjouter)
                        .addGap(143, 143, 143)
                        .addComponent(jButtonModifier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSupprimer))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMessage)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelGrammatical)
                                    .addComponent(jLabelNom)
                                    .addComponent(jLabelCode)
                                    .addComponent(jLabelId))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldGrammatical, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldNom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCode)
                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNom)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGrammatical)
                    .addComponent(jTextFieldGrammatical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter)
                    .addComponent(jButtonModifier)
                    .addComponent(jButtonSupprimer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabelMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableGenresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableGenresKeyReleased
        // TODO add your handling code here:
        jTableGenresMouseClicked(null);

    }//GEN-LAST:event_jTableGenresKeyReleased

    private void jTableGenresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableGenresMouseClicked
        // TODO add your handling code here:
        int liSelectedRow = this.jTableGenres.getSelectedRow();

        jTextFieldId.setText(jTableGenres.getValueAt(liSelectedRow, 0).toString());
        jTextFieldCode.setText(jTableGenres.getValueAt(liSelectedRow, 1).toString());
        jTextFieldNom.setText(jTableGenres.getValueAt(liSelectedRow, 2).toString());
        jTextFieldGrammatical.setText(jTableGenres.getValueAt(liSelectedRow, 3).toString());

    }//GEN-LAST:event_jTableGenresMouseClicked

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // TODO add your handling code here:
        int liAffecte;

        if (jTextFieldCode.getText().isEmpty() || jTextFieldNom.getText().isEmpty() || jTextFieldGrammatical.getText().isEmpty()) {

            jLabelMessage.setText("Veuillez renseigner tout les champs !!");
        } else {
            try {

                GenreDAO dao = new GenreDAO(icn);

                // Insert
                Genre di = new Genre(jTextFieldCode.getText(), jTextFieldNom.getText(), jTextFieldGrammatical.getText());
                liAffecte = dao.insert(di);
                if (liAffecte == 1) {
                    icn.commit();
                    remplirJTable();
                    int liMax = jTableGenres.getRowCount() - 1;
                    jTableGenres.getSelectionModel().setSelectionInterval(liMax, liMax);
                    jTableGenres.scrollRectToVisible(new Rectangle(jTableGenres.getCellRect(liMax, 0, true)));
                }
                jLabelMessage.setText("Ajout rÃ©ussi !");

                cls();
            } catch (SQLException ex) {
                jLabelMessage.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        // TODO add your handling code here:
        if (jTextFieldCode.getText().isEmpty() || jTextFieldNom.getText().isEmpty() || jTextFieldGrammatical.getText().isEmpty()) {

            jLabelMessage.setText("Veuillez sÃ©lectionner une ligne.");
        } else {
            int liAffecte;

            try {
                GenreDAO dao = new GenreDAO(icn);

                // Update
                Genre di = new Genre(Integer.valueOf(jTextFieldId.getText()), jTextFieldCode.getText(), jTextFieldNom.getText(), jTextFieldGrammatical.getText());
                liAffecte = dao.update(di);
                if (liAffecte == 1) {
                    icn.commit();
                    remplirJTable();
                    cls();
                }
                jLabelMessage.setText("Genre modifiÃ© !");

            } catch (SQLException e) {
                jLabelMessage.setText(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        // TODO add your handling code here:
        if (jTextFieldCode.getText().isEmpty() || jTextFieldNom.getText().isEmpty() || jTextFieldGrammatical.getText().isEmpty()) {

            jLabelMessage.setText("Veuillez sÃ©lectionner une ligne.");
        } else {
            int liAffecte;
            try {
                GenreDAO dao = new GenreDAO(icn);

                // Delete
                Genre dd = new Genre(Integer.valueOf(jTextFieldId.getText()), jTextFieldCode.getText(), jTextFieldNom.getText(), jTextFieldGrammatical.getText());
                liAffecte = dao.delete(dd);
                icn.commit();
                if (liAffecte == 1) {
                    icn.commit();
                    remplirJTable();
                    cls();
                }
                jLabelMessage.setText("Genre supprimÃ© !");

            } catch (SQLException e) {
                jLabelMessage.setText(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTextFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelGrammatical;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableGenres;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldGrammatical;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables
}
